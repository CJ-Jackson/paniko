// +build debug

// Code generated by MockGen. DO NOT EDIT.
// Source: mailer.go

package mail

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMailer is a mock of Mailer interface
type MockMailer struct {
	ctrl     *gomock.Controller
	recorder *MockMailerMockRecorder
}

// MockMailerMockRecorder is the mock recorder for MockMailer
type MockMailerMockRecorder struct {
	mock *MockMailer
}

// NewMockMailer creates a new mock instance
func NewMockMailer(ctrl *gomock.Controller) *MockMailer {
	mock := &MockMailer{ctrl: ctrl}
	mock.recorder = &MockMailerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMailer) EXPECT() *MockMailerMockRecorder {
	return m.recorder
}

// Dispatch mocks base method
func (m *MockMailer) Dispatch() {
	m.ctrl.Call(m, "Dispatch")
}

// Dispatch indicates an expected call of Dispatch
func (mr *MockMailerMockRecorder) Dispatch() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Dispatch", reflect.TypeOf((*MockMailer)(nil).Dispatch))
}
