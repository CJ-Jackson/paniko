// +build debug

// Code generated by MockGen. DO NOT EDIT.
// Source: error_view.go

package errors

import (
	ctx "github.com/CJ-Jackson/ctx"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockErrorView is a mock of ErrorView interface
type MockErrorView struct {
	ctrl     *gomock.Controller
	recorder *MockErrorViewMockRecorder
}

// MockErrorViewMockRecorder is the mock recorder for MockErrorView
type MockErrorViewMockRecorder struct {
	mock *MockErrorView
}

// NewMockErrorView creates a new mock instance
func NewMockErrorView(ctrl *gomock.Controller) *MockErrorView {
	mock := &MockErrorView{ctrl: ctrl}
	mock.recorder = &MockErrorViewMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockErrorView) EXPECT() *MockErrorViewMockRecorder {
	return m.recorder
}

// ErrorTemplate mocks base method
func (m *MockErrorView) ErrorTemplate(context ctx.Context, code int, title string, data ErrorTemplateData) {
	m.ctrl.Call(m, "ErrorTemplate", context, code, title, data)
}

// ErrorTemplate indicates an expected call of ErrorTemplate
func (mr *MockErrorViewMockRecorder) ErrorTemplate(context, code, title, data interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ErrorTemplate", reflect.TypeOf((*MockErrorView)(nil).ErrorTemplate), context, code, title, data)
}
