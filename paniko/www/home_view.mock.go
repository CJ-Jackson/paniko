// +build debug

// Code generated by MockGen. DO NOT EDIT.
// Source: home_view.go

package www

import (
	ctx "github.com/CJ-Jackson/ctx"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockHomeView is a mock of HomeView interface
type MockHomeView struct {
	ctrl     *gomock.Controller
	recorder *MockHomeViewMockRecorder
}

// MockHomeViewMockRecorder is the mock recorder for MockHomeView
type MockHomeViewMockRecorder struct {
	mock *MockHomeView
}

// NewMockHomeView creates a new mock instance
func NewMockHomeView(ctrl *gomock.Controller) *MockHomeView {
	mock := &MockHomeView{ctrl: ctrl}
	mock.recorder = &MockHomeViewMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHomeView) EXPECT() *MockHomeViewMockRecorder {
	return m.recorder
}

// Index mocks base method
func (m *MockHomeView) Index(context ctx.Context, data HomeViewIndexData) {
	m.ctrl.Call(m, "Index", context, data)
}

// Index indicates an expected call of Index
func (mr *MockHomeViewMockRecorder) Index(context, data interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Index", reflect.TypeOf((*MockHomeView)(nil).Index), context, data)
}

// Json mocks base method
func (m *MockHomeView) Json(context ctx.Context, data JsonData) {
	m.ctrl.Call(m, "Json", context, data)
}

// Json indicates an expected call of Json
func (mr *MockHomeViewMockRecorder) Json(context, data interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Json", reflect.TypeOf((*MockHomeView)(nil).Json), context, data)
}
