// +build debug

// Code generated by MockGen. DO NOT EDIT.
// Source: login_view.go

package login

import (
	reflect "reflect"

	ctx "github.com/cjtoolkit/ctx"
	gomock "github.com/golang/mock/gomock"
)

// MockLoginView is a mock of LoginView interface
type MockLoginView struct {
	ctrl     *gomock.Controller
	recorder *MockLoginViewMockRecorder
}

// MockLoginViewMockRecorder is the mock recorder for MockLoginView
type MockLoginViewMockRecorder struct {
	mock *MockLoginView
}

// NewMockLoginView creates a new mock instance
func NewMockLoginView(ctrl *gomock.Controller) *MockLoginView {
	mock := &MockLoginView{ctrl: ctrl}
	mock.recorder = &MockLoginViewMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLoginView) EXPECT() *MockLoginViewMockRecorder {
	return m.recorder
}

// LoginTemplate mocks base method
func (m *MockLoginView) LoginTemplate(context ctx.Context, form LoginForm) {
	m.ctrl.Call(m, "LoginTemplate", context, form)
}

// LoginTemplate indicates an expected call of LoginTemplate
func (mr *MockLoginViewMockRecorder) LoginTemplate(context, form interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoginTemplate", reflect.TypeOf((*MockLoginView)(nil).LoginTemplate), context, form)
}
